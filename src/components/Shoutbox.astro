---
// src/components/Shoutbox.astro
---

<div id="shoutbox" class="space-y-4"></div>

<form id="shoutboxForm">
  <input type="text" id="messageInput" placeholder="Enter your message" />
  <button type="submit">Send</button>
</form>

<script>
  const baseUrl = '/';  // Adjust the base URL as needed

  async function fetchMessages() {
    try {
      const response = await fetch(`${baseUrl}api/shoutbox`);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const data = await response.json();
      renderMessages(data);
    } catch (error) {
      console.error('Error fetching messages:', error);
    }
  }

  function renderMessages(messages: Array<{ player_name: string; message: string; timestamp: string }>) {
    const shoutboxContainer = document.getElementById('shoutbox');
    if (shoutboxContainer) {  // Null check
      shoutboxContainer.innerHTML = '';  // Clear existing messages
      messages.forEach((msg) => {
        const messageElement = document.createElement('div');
        messageElement.textContent = `${msg.player_name}: ${msg.message} (${new Date(msg.timestamp).toLocaleTimeString()})`;
        shoutboxContainer.appendChild(messageElement);
      });
    }
  }

  async function handleSubmit(event: Event) {
    event.preventDefault();
    const messageInput = document.getElementById('messageInput') as HTMLInputElement | null;
    if (messageInput) {  // Null check
      const newMessage = messageInput.value;

      try {
        const response = await fetch(`${baseUrl}api/shoutbox`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ player_name: 'Player1', message: newMessage }),  // Replace 'Player1' with dynamic data if needed
        });
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        messageInput.value = '';  // Clear input field
        fetchMessages();  // Refresh messages
      } catch (error) {
        console.error('Error submitting message:', error);
      }
    }
  }

  const shoutboxForm = document.getElementById('shoutboxForm');
  if (shoutboxForm) {  // Null check
    shoutboxForm.addEventListener('submit', handleSubmit);
  }

  // Fetch messages when the page loads
  fetchMessages();
</script>
